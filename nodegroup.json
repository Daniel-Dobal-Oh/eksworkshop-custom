{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "EKS Managed Nodes (SSH access: false) [created by eksctl]",
    "Mappings": {
      "ServicePrincipalPartitionMap": {
        "aws": {
          "EC2": "ec2.amazonaws.com",
          "EKS": "eks.amazonaws.com",
          "EKSFargatePods": "eks-fargate-pods.amazonaws.com"
        },
        "aws-cn": {
          "EC2": "ec2.amazonaws.com.cn",
          "EKS": "eks.amazonaws.com",
          "EKSFargatePods": "eks-fargate-pods.amazonaws.com"
        },
        "aws-us-gov": {
          "EC2": "ec2.amazonaws.com",
          "EKS": "eks.amazonaws.com",
          "EKSFargatePods": "eks-fargate-pods.amazonaws.com"
        }
      }
    },
    "Resources": {
      "LaunchTemplate": {
        "Type": "AWS::EC2::LaunchTemplate",
        "Properties": {
          "LaunchTemplateData": {
            "BlockDeviceMappings": [
              {
                "DeviceName": "/dev/xvda",
                "Ebs": {
                  "Encrypted": true,
                  "Iops": 3000,
                  "Throughput": 125,
                  "VolumeSize": 100,
                  "VolumeType": "gp3"
                }
              }
            ],
            "MetadataOptions": {
              "HttpPutResponseHopLimit": 2,
              "HttpTokens": "optional"
            },
            "SecurityGroupIds": [
              {
                "Fn::ImportValue": "eksctl-eksworkshop-eksctl-cluster::ClusterSecurityGroupId"
              }
            ],
            "TagSpecifications": [
              {
                "ResourceType": "instance",
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "eksworkshop-eksctl-nodegroup-Node"
                  },
                  {
                    "Key": "eks:cluster-name",
                    "Value": "eksworkshop-eksctl"
                  },
                  {
                    "Key": "alpha.eksctl.io/nodegroup-name",
                    "Value": "nodegroup"
                  },
                  {
                    "Key": "alpha.eksctl.io/nodegroup-type",
                    "Value": "managed"
                  }
                ]
              },
              {
                "ResourceType": "volume",
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "eksworkshop-eksctl-nodegroup-Node"
                  },
                  {
                    "Key": "eks:cluster-name",
                    "Value": "eksworkshop-eksctl"
                  },
                  {
                    "Key": "alpha.eksctl.io/nodegroup-name",
                    "Value": "nodegroup"
                  },
                  {
                    "Key": "alpha.eksctl.io/nodegroup-type",
                    "Value": "managed"
                  }
                ]
              },
              {
                "ResourceType": "network-interface",
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": "eksworkshop-eksctl-nodegroup-Node"
                  },
                  {
                    "Key": "eks:cluster-name",
                    "Value": "eksworkshop-eksctl"
                  },
                  {
                    "Key": "alpha.eksctl.io/nodegroup-name",
                    "Value": "nodegroup"
                  },
                  {
                    "Key": "alpha.eksctl.io/nodegroup-type",
                    "Value": "managed"
                  }
                ]
              }
            ]
          },
          "LaunchTemplateName": {
            "Fn::Sub": "${AWS::StackName}"
          }
        }
      },
      "ManagedNodeGroup": {
        "Type": "AWS::EKS::Nodegroup",
        "Properties": {
          "AmiType": "AL2_x86_64",
          "ClusterName": "eksworkshop-eksctl",
          "InstanceTypes": [
            "t3.small"
          ],
          "Labels": {
            "alpha.eksctl.io/cluster-name": "eksworkshop-eksctl",
            "alpha.eksctl.io/nodegroup-name": "nodegroup"
          },
          "LaunchTemplate": {
            "Id": {
              "Ref": "LaunchTemplate"
            }
          },
          "NodeRole": {
            "Fn::GetAtt": [
              "NodeInstanceRole",
              "Arn"
            ]
          },
          "NodegroupName": "nodegroup",
          "ScalingConfig": {
            "DesiredSize": 3,
            "MaxSize": 4,
            "MinSize": 2
          },
          "Subnets": {
            "Fn::Split": [
              ",",
              {
                "Fn::ImportValue": "eksctl-eksworkshop-eksctl-cluster::SubnetsPrivate"
              }
            ]
          },
          "Tags": {
            "alpha.eksctl.io/nodegroup-name": "nodegroup",
            "alpha.eksctl.io/nodegroup-type": "managed",
            "eks:cluster-name": "eksworkshop-eksctl"
          }
        }
      },
      "NodeInstanceRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "sts:AssumeRole"
                ],
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    {
                      "Fn::FindInMap": [
                        "ServicePrincipalPartitionMap",
                        {
                          "Ref": "AWS::Partition"
                        },
                        "EC2"
                      ]
                    }
                  ]
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "ManagedPolicyArns": [
            {
              "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser"
            },
            {
              "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
            },
            {
              "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy"
            },
            {
              "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy"
            },
            {
              "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore"
            },
            {
              "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy"
            }
          ],
          "Path": "/",
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Fn::Sub": "${AWS::StackName}/NodeInstanceRole"
              }
            }
          ]
        }
      },
      "PolicyAWSLoadBalancerController": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "ec2:CreateTags"
                ],
                "Condition": {
                  "Null": {
                    "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
                  },
                  "StringEquals": {
                    "ec2:CreateAction": "CreateSecurityGroup"
                  }
                },
                "Effect": "Allow",
                "Resource": {
                  "Fn::Sub": "arn:${AWS::Partition}:ec2:*:*:security-group/*"
                }
              },
              {
                "Action": [
                  "ec2:CreateTags",
                  "ec2:DeleteTags"
                ],
                "Condition": {
                  "Null": {
                    "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
                    "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                  }
                },
                "Effect": "Allow",
                "Resource": {
                  "Fn::Sub": "arn:${AWS::Partition}:ec2:*:*:security-group/*"
                }
              },
              {
                "Action": [
                  "elasticloadbalancing:CreateLoadBalancer",
                  "elasticloadbalancing:CreateTargetGroup"
                ],
                "Condition": {
                  "Null": {
                    "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
                  }
                },
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Action": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:RemoveTags"
                ],
                "Condition": {
                  "Null": {
                    "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
                    "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                  }
                },
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:${AWS::Partition}:elasticloadbalancing:*:*:targetgroup/*/*"
                  },
                  {
                    "Fn::Sub": "arn:${AWS::Partition}:elasticloadbalancing:*:*:loadbalancer/net/*/*"
                  },
                  {
                    "Fn::Sub": "arn:${AWS::Partition}:elasticloadbalancing:*:*:loadbalancer/app/*/*"
                  }
                ]
              },
              {
                "Action": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:RemoveTags"
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:${AWS::Partition}:elasticloadbalancing:*:*:listener/net/*/*/*"
                  },
                  {
                    "Fn::Sub": "arn:${AWS::Partition}:elasticloadbalancing:*:*:listener/app/*/*/*"
                  },
                  {
                    "Fn::Sub": "arn:${AWS::Partition}:elasticloadbalancing:*:*:listener-rule/net/*/*/*"
                  },
                  {
                    "Fn::Sub": "arn:${AWS::Partition}:elasticloadbalancing:*:*:listener-rule/app/*/*/*"
                  }
                ]
              },
              {
                "Action": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:RevokeSecurityGroupIngress",
                  "ec2:DeleteSecurityGroup",
                  "elasticloadbalancing:ModifyLoadBalancerAttributes",
                  "elasticloadbalancing:SetIpAddressType",
                  "elasticloadbalancing:SetSecurityGroups",
                  "elasticloadbalancing:SetSubnets",
                  "elasticloadbalancing:DeleteLoadBalancer",
                  "elasticloadbalancing:ModifyTargetGroup",
                  "elasticloadbalancing:ModifyTargetGroupAttributes",
                  "elasticloadbalancing:DeleteTargetGroup"
                ],
                "Condition": {
                  "Null": {
                    "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                  }
                },
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Action": [
                  "elasticloadbalancing:RegisterTargets",
                  "elasticloadbalancing:DeregisterTargets"
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Sub": "arn:${AWS::Partition}:elasticloadbalancing:*:*:targetgroup/*/*"
                }
              },
              {
                "Action": [
                  "iam:CreateServiceLinkedRole",
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeAddresses",
                  "ec2:DescribeAvailabilityZones",
                  "ec2:DescribeInternetGateways",
                  "ec2:DescribeVpcs",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeInstances",
                  "ec2:DescribeNetworkInterfaces",
                  "ec2:DescribeTags",
                  "ec2:DescribeVpcPeeringConnections",
                  "elasticloadbalancing:DescribeLoadBalancers",
                  "elasticloadbalancing:DescribeLoadBalancerAttributes",
                  "elasticloadbalancing:DescribeListeners",
                  "elasticloadbalancing:DescribeListenerCertificates",
                  "elasticloadbalancing:DescribeSSLPolicies",
                  "elasticloadbalancing:DescribeRules",
                  "elasticloadbalancing:DescribeTargetGroups",
                  "elasticloadbalancing:DescribeTargetGroupAttributes",
                  "elasticloadbalancing:DescribeTargetHealth",
                  "elasticloadbalancing:DescribeTags",
                  "cognito-idp:DescribeUserPoolClient",
                  "acm:ListCertificates",
                  "acm:DescribeCertificate",
                  "iam:ListServerCertificates",
                  "iam:GetServerCertificate",
                  "waf-regional:GetWebACL",
                  "waf-regional:GetWebACLForResource",
                  "waf-regional:AssociateWebACL",
                  "waf-regional:DisassociateWebACL",
                  "wafv2:GetWebACL",
                  "wafv2:GetWebACLForResource",
                  "wafv2:AssociateWebACL",
                  "wafv2:DisassociateWebACL",
                  "shield:GetSubscriptionState",
                  "shield:DescribeProtection",
                  "shield:CreateProtection",
                  "shield:DeleteProtection",
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:RevokeSecurityGroupIngress",
                  "ec2:CreateSecurityGroup",
                  "elasticloadbalancing:CreateListener",
                  "elasticloadbalancing:DeleteListener",
                  "elasticloadbalancing:CreateRule",
                  "elasticloadbalancing:DeleteRule",
                  "elasticloadbalancing:SetWebAcl",
                  "elasticloadbalancing:ModifyListener",
                  "elasticloadbalancing:AddListenerCertificates",
                  "elasticloadbalancing:RemoveListenerCertificates",
                  "elasticloadbalancing:ModifyRule"
                ],
                "Effect": "Allow",
                "Resource": "*"
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": {
            "Fn::Sub": "${AWS::StackName}-PolicyAWSLoadBalancerController"
          },
          "Roles": [
            {
              "Ref": "NodeInstanceRole"
            }
          ]
        }
      },
      "PolicyAppMesh": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "servicediscovery:CreateService",
                  "servicediscovery:DeleteService",
                  "servicediscovery:GetService",
                  "servicediscovery:GetInstance",
                  "servicediscovery:RegisterInstance",
                  "servicediscovery:DeregisterInstance",
                  "servicediscovery:ListInstances",
                  "servicediscovery:ListNamespaces",
                  "servicediscovery:ListServices",
                  "servicediscovery:GetInstancesHealthStatus",
                  "servicediscovery:UpdateInstanceCustomHealthStatus",
                  "servicediscovery:GetOperation",
                  "route53:GetHealthCheck",
                  "route53:CreateHealthCheck",
                  "route53:UpdateHealthCheck",
                  "route53:ChangeResourceRecordSets",
                  "route53:DeleteHealthCheck",
                  "appmesh:*"
                ],
                "Effect": "Allow",
                "Resource": "*"
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": {
            "Fn::Sub": "${AWS::StackName}-PolicyAppMesh"
          },
          "Roles": [
            {
              "Ref": "NodeInstanceRole"
            }
          ]
        }
      },
      "PolicyAutoScaling": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "autoscaling:DescribeAutoScalingGroups",
                  "autoscaling:DescribeAutoScalingInstances",
                  "autoscaling:DescribeLaunchConfigurations",
                  "autoscaling:DescribeTags",
                  "autoscaling:SetDesiredCapacity",
                  "autoscaling:TerminateInstanceInAutoScalingGroup",
                  "ec2:DescribeInstanceTypes",
                  "ec2:DescribeLaunchTemplateVersions"
                ],
                "Effect": "Allow",
                "Resource": "*"
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": {
            "Fn::Sub": "${AWS::StackName}-PolicyAutoScaling"
          },
          "Roles": [
            {
              "Ref": "NodeInstanceRole"
            }
          ]
        }
      },
      "PolicyCertManagerChangeSet": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "route53:ChangeResourceRecordSets"
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Sub": "arn:${AWS::Partition}:route53:::hostedzone/*"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": {
            "Fn::Sub": "${AWS::StackName}-PolicyCertManagerChangeSet"
          },
          "Roles": [
            {
              "Ref": "NodeInstanceRole"
            }
          ]
        }
      },
      "PolicyCertManagerGetChange": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "route53:GetChange"
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Sub": "arn:${AWS::Partition}:route53:::change/*"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": {
            "Fn::Sub": "${AWS::StackName}-PolicyCertManagerGetChange"
          },
          "Roles": [
            {
              "Ref": "NodeInstanceRole"
            }
          ]
        }
      },
      "PolicyCertManagerHostedZones": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "route53:ListResourceRecordSets",
                  "route53:ListHostedZonesByName"
                ],
                "Effect": "Allow",
                "Resource": "*"
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": {
            "Fn::Sub": "${AWS::StackName}-PolicyCertManagerHostedZones"
          },
          "Roles": [
            {
              "Ref": "NodeInstanceRole"
            }
          ]
        }
      },
      "PolicyEBS": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "ec2:CreateSnapshot",
                  "ec2:AttachVolume",
                  "ec2:DetachVolume",
                  "ec2:ModifyVolume",
                  "ec2:DescribeAvailabilityZones",
                  "ec2:DescribeInstances",
                  "ec2:DescribeSnapshots",
                  "ec2:DescribeTags",
                  "ec2:DescribeVolumes",
                  "ec2:DescribeVolumesModifications"
                ],
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Action": [
                  "ec2:CreateTags"
                ],
                "Condition": {
                  "StringEquals": {
                    "ec2:CreateAction": [
                      "CreateVolume",
                      "CreateSnapshot"
                    ]
                  }
                },
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:${AWS::Partition}:ec2:*:*:volume/*"
                  },
                  {
                    "Fn::Sub": "arn:${AWS::Partition}:ec2:*:*:snapshot/*"
                  }
                ]
              },
              {
                "Action": [
                  "ec2:DeleteTags"
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Sub": "arn:${AWS::Partition}:ec2:*:*:volume/*"
                  },
                  {
                    "Fn::Sub": "arn:${AWS::Partition}:ec2:*:*:snapshot/*"
                  }
                ]
              },
              {
                "Action": [
                  "ec2:CreateVolume"
                ],
                "Condition": {
                  "StringLike": {
                    "aws:RequestTag/ebs.csi.aws.com/cluster": "true"
                  }
                },
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Action": [
                  "ec2:CreateVolume"
                ],
                "Condition": {
                  "StringLike": {
                    "aws:RequestTag/CSIVolumeName": "*"
                  }
                },
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Action": [
                  "ec2:CreateVolume"
                ],
                "Condition": {
                  "StringLike": {
                    "aws:RequestTag/kubernetes.io/cluster/*": "owned"
                  }
                },
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Action": [
                  "ec2:DeleteVolume"
                ],
                "Condition": {
                  "StringLike": {
                    "ec2:ResourceTag/ebs.csi.aws.com/cluster": "true"
                  }
                },
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Action": [
                  "ec2:DeleteVolume"
                ],
                "Condition": {
                  "StringLike": {
                    "ec2:ResourceTag/CSIVolumeName": "*"
                  }
                },
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Action": [
                  "ec2:DeleteVolume"
                ],
                "Condition": {
                  "StringLike": {
                    "ec2:ResourceTag/kubernetes.io/cluster/*": "owned"
                  }
                },
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Action": [
                  "ec2:DeleteSnapshot"
                ],
                "Condition": {
                  "StringLike": {
                    "ec2:ResourceTag/CSIVolumeSnapshotName": "*"
                  }
                },
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Action": [
                  "ec2:DeleteSnapshot"
                ],
                "Condition": {
                  "StringLike": {
                    "ec2:ResourceTag/ebs.csi.aws.com/cluster": "true"
                  }
                },
                "Effect": "Allow",
                "Resource": "*"
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": {
            "Fn::Sub": "${AWS::StackName}-PolicyEBS"
          },
          "Roles": [
            {
              "Ref": "NodeInstanceRole"
            }
          ]
        }
      },
      "PolicyEFS": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "elasticfilesystem:*"
                ],
                "Effect": "Allow",
                "Resource": "*"
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": {
            "Fn::Sub": "${AWS::StackName}-PolicyEFS"
          },
          "Roles": [
            {
              "Ref": "NodeInstanceRole"
            }
          ]
        }
      },
      "PolicyEFSEC2": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "ec2:DescribeSubnets",
                  "ec2:CreateNetworkInterface",
                  "ec2:DescribeNetworkInterfaces",
                  "ec2:DeleteNetworkInterface",
                  "ec2:ModifyNetworkInterfaceAttribute",
                  "ec2:DescribeNetworkInterfaceAttribute"
                ],
                "Effect": "Allow",
                "Resource": "*"
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": {
            "Fn::Sub": "${AWS::StackName}-PolicyEFSEC2"
          },
          "Roles": [
            {
              "Ref": "NodeInstanceRole"
            }
          ]
        }
      },
      "PolicyExternalDNSChangeSet": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "route53:ChangeResourceRecordSets"
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Sub": "arn:${AWS::Partition}:route53:::hostedzone/*"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": {
            "Fn::Sub": "${AWS::StackName}-PolicyExternalDNSChangeSet"
          },
          "Roles": [
            {
              "Ref": "NodeInstanceRole"
            }
          ]
        }
      },
      "PolicyExternalDNSHostedZones": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "route53:ListHostedZones",
                  "route53:ListResourceRecordSets",
                  "route53:ListTagsForResource"
                ],
                "Effect": "Allow",
                "Resource": "*"
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": {
            "Fn::Sub": "${AWS::StackName}-PolicyExternalDNSHostedZones"
          },
          "Roles": [
            {
              "Ref": "NodeInstanceRole"
            }
          ]
        }
      },
      "PolicyFSX": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "fsx:*"
                ],
                "Effect": "Allow",
                "Resource": "*"
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": {
            "Fn::Sub": "${AWS::StackName}-PolicyFSX"
          },
          "Roles": [
            {
              "Ref": "NodeInstanceRole"
            }
          ]
        }
      },
      "PolicyServiceLinkRole": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "iam:CreateServiceLinkedRole",
                  "iam:AttachRolePolicy",
                  "iam:PutRolePolicy"
                ],
                "Effect": "Allow",
                "Resource": {
                  "Fn::Sub": "arn:${AWS::Partition}:iam::*:role/aws-service-role/*"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": {
            "Fn::Sub": "${AWS::StackName}-PolicyServiceLinkRole"
          },
          "Roles": [
            {
              "Ref": "NodeInstanceRole"
            }
          ]
        }
      },
      "PolicyXRay": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "xray:PutTraceSegments",
                  "xray:PutTelemetryRecords",
                  "xray:GetSamplingRules",
                  "xray:GetSamplingTargets",
                  "xray:GetSamplingStatisticSummaries"
                ],
                "Effect": "Allow",
                "Resource": "*"
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": {
            "Fn::Sub": "${AWS::StackName}-PolicyXRay"
          },
          "Roles": [
            {
              "Ref": "NodeInstanceRole"
            }
          ]
        }
      }
    }
  }